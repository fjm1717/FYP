<launch>
  <!--Gazebo arguments-->
  <arg name="paused" default="false"/>
  <arg name="gui" default="true"/>

  <!--load signaturebot URDF to parameter server as robot_description-->
  <param name="robot_description" textfile="$(find fyp)/urdf/signaturebot_effort.urdf"/>
  <!--load arm_controller and joint_limits to parameter server-->
  <rosparam file="$(find fyp)/config/position_controller.yaml" command="load"/>

  <!--launch empty_world in Gazebo with arguments-->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
   <arg name="world_name" default="worlds/empty.world"/>
   <arg name="paused" value="$(arg paused)"/>
   <arg name="gui" value="$(arg gui)"/>
 </include>

  <!--spawn controllers using respective controller managers-->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/signaturebot"
    args="
    arm_controller/state
    arm_controller/position/pitch_joint
    arm_controller/position/yaw_joint
    arm_controller/position/extension_joint
    "/>

  <!--publish joint states to /tf for rviz etc-->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    output="screen">
  </node>

  <!--spawn robot_description into Gazebo from parameter server-->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model signaturebot"/>

  <node pkg="fyp" name="workspace_sweep" type="workspace_sweep.py" output="screen" launch-prefix="gnome-terminal --command"/>

  <node
    name="rviz"
    pkg="rviz"
    type="rviz"
    args="-d $(find fyp)/rviz_config/path_odometry.rviz" required="true" />

</launch>
